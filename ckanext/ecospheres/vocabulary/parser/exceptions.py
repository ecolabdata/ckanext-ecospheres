"""Exceptions for vocabulary parsers.

This module define a base class, :py:class:`VocabularyParsingError`,
and several subclasses for custom exceptions generated while
parsing vocabularies.

"""

import json

class VocabularyParsingError(Exception):
    """Base class for exceptions generated by a vocabulary parser.
    
    These errors are meant to be logged in the 
    parsing result :py:attr:`VocabularyParsingResult.log`
    attribute, not raised.

    Subclasses may add their own attributes.

    Parameters
    ----------
    message : str
        Description of the error.
    detail : str, optional
        More informations about the error.
    
    Attribute
    ---------
    message : str
        Description of the error.
    detail : str
       More informations about the error, if any.
    
    """
    def __init__(self, message, detail=None, **kwargs):
        self.message = message or 'some unknown error occurred during parsing'
        self.detail = detail

    def __str__(self):
        return self.message

    def __repr__(self):
        return f'{type(self).__name__}: {self.message}'

class InvalidDataError(VocabularyParsingError):
    """Error to be logged by the parser when some anomaly was found while validating the data.
    
    Parameters
    ----------
    anomaly : DataValidationAnomaly
        The anomaly for which an exception
        should be raised.
    
    Attributes
    ----------
    message : str
        Description of the error.
    anomaly : DataValidationAnomaly
        The anomaly for which an exception
        is raised.

    """

    def __init__(self, anomaly):
        message = 'row {} infringes the constraint "{}"'.format(
            json.dumps(anomaly, ensure_ascii=False),
            repr(anomaly.constraint)
        )
        super().__init__(message=message)
        self.anomaly = anomaly

class UnexpectedDataError(VocabularyParsingError):
    """Error to be logged by vocabulary parsers when some fetched data doesn't match expectations.
    
    Parameters
    ----------
    message : str
        Short description of the error.
    detail : str, optional
        More informations about the error.

    Attributes
    ----------
    message : str
        Description of the error.
    detail : str
        More informations about the error.

    """

class NoVocabularyDataError(VocabularyParsingError):
    """Error to be logged by vocabulary parsers when no vocabulary data was found in the fetched content.
    
    Parameters
    ----------
    message : str, optional
        Short description of the error.
    detail : str, optional
        More informations about the error.

    Attributes
    ----------
    message : str
        Description of the error.
    detail : str
        More informations about the error.

    """

    def __init__(self, message=None, detail=None):
        if not message:
            message = 'could not find any vocabulary data in fetched content'
        super().__init__(message=message, detail=detail)

